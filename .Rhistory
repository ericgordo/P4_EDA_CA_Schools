"NumGE21","ETOT","DTOT"
)],
label=TRUE, layout.exp = 3, hjust=1) +
labs(title="Variable Correlations")
ggplot(data =school.df,
aes(x=PctGE21,y=PctGE1500, color= Charter))+
geom_point( alpha=1/3, size=3/4) +
geom_hline(yintercept =50, linetype=3) +
geom_vline(xintercept = 50, linetype=3)+
scale_color_manual( values=c("sienna2", "#0000CC"))+
geom_smooth(method="lm",se=FALSE, size=1)+
labs(color="Charter") +
xlab("% Students Scoring Above ACT 21")+
ylab("% Students Scoring Above SAT 1500")
#Getting Som Stat
both <- subset (school.df,
!is.na(PctGE21) & !is.na(PctGE1500))
q1 <- subset (both,
PctGE21<50 & PctGE1500<50)
print("Are Schools That Fall Below Avg For Both Tests Charters?")
table(q1$Charter)
print("How Many are Charters on Entire Plot?")
table(both$Charter)
geom_point (data =city.schools, x=mean(PctGE1500), y=mean(PctGE21))
ggplot(data =school.df,
aes(x=PctGE21,y=PctGE1500, color= Charter))+
geom_point ( alpha=1/3, size=3/4) +
geom_hline (yintercept =50, linetype=3) +
geom_vline (xintercept = 50, linetype=3)+
scale_color_manual ( values=c("sienna2", "#0000CC"))+
geom_smooth (method="lm",se=FALSE, size=1)+
labs(color="Charter") +
xlab ("% Students Scoring Above ACT 21")+
ylab ("% Students Scoring Above SAT 1500") +
geom_point (data =city.schools, x=mean(PctGE1500), y=mean(PctGE21))
geom_point (data =school.df, x=mean(PctGE1500), y=mean(PctGE21))
mean(school.df$PctGE21)
mean(!is.na(school.df$PctGE21))
mean(!is.na(school.df$PctGE1500))
View(school.df)
subset(Charter=="Y")
charterACT<- school.df %>%
subset(school.df$Charter =="Y")
View(charterACT)
charterACT<- school.df %>%
subset(school.df$Charter =="Y")  %>%
subset (select= c (PctGE1500, PctGE21))
charterACT<- school.df %>%
subset(school.df$Charter =="Y")  %>%
subset (select= c (PctGE1500, PctGE21)) %>%
mean(*)
mean(charterACT$PctGE21)
mean(charterACT$PctGE1500)
charterACT<- school.df %>%
subset(school.df$Charter =="Y")  %>%
subset(!is.na(ctGE21)) %>%
subset (select= c (PctGE21))
charterACT<- school.df %>%
subset(school.df$Charter =="Y")  %>%
subset(!is.na(PctGE21)) %>%
subset (select= c (PctGE21))
mean(charterACT$PctGE1500)
charterACT$
mean(charterACT)
mean(charterACT$PctGE21)
summary(school.df$NumGE21, na.rm = TRUE)
summary(school.df$AvgScrEng, na.rm = TRUE)
summary(school.df$AvgScrRead.x, na.rm = TRUE)
summary(school.df$AvgScrMath.x, na.rm = TRUE)
summary(school.df$AvgScrSci, na.rm = TRUE)
summary(school.df$NumGE1500, na.rm = TRUE)
summary(school.df$AvgScrWrite, na.rm = TRUE)
summary(school.df$AvgScrMath.y, na.rm = TRUE)
summary(school.df$AvgScrRead.y, na.rm = TRUE)
summary(school.df$AvgSum, na.rm = TRUE)
#GG Pairs Plot to Help with more depth.
ggcorr (school.df[c("NumGE1500",
"NumTstTakr.x","AvgScrRead.x",
"AvgScrMath.x","AvgScrWrite",
"AvgSum","NumTstTakr.y",
"AvgScrEng","AvgScrRead.y",
"AvgScrMath.y","AvgScrSci",
"NumGE21","ETOT","DTOT"
)],
label=TRUE, layout.exp = 3, hjust=1, label_round = 2,) +
labs(title="Variable Correlations")
# Load all of the packages that you end up using
# in your analysis in this code chunk.
library(maps)
library(zipcode)
library(ggplot2)
library(mapdata)
library(reshape2)
library(dplyr)
library(plyr)
library(tidyr)
library(gridExtra)
library(ggthemes)
library(GGally)
#GGcorr Plot to Help with more depth.
ggcorr (school.df[c("NumGE1500",
"NumTstTakr.x","AvgScrRead.x",
"AvgScrMath.x","AvgScrWrite",
"AvgSum","NumTstTakr.y",
"AvgScrEng","AvgScrRead.y",
"AvgScrMath.y","AvgScrSci",
"NumGE21","ETOT","DTOT"
)],
label=TRUE, layout.exp = 3, hjust=1, label_round = 2,) +
labs(title="Variable Correlations")
#GGcorr Plot to Help with more depth.
ggcorr (school.df[c("NumGE1500",
"NumTstTakr.x","AvgScrRead.x",
"AvgScrMath.x","AvgScrWrite",
"AvgSum","NumTstTakr.y",
"AvgScrEng","AvgScrRead.y",
"AvgScrMath.y","AvgScrSci",
"NumGE21","ETOT","DTOT"
)],
label=TRUE, layout.exp = 3, hjust=1, label_round = 2,label_size = 3) +
labs(title="Variable Correlations")
?ggcorr
read_vs_math <- ggplot (data =school.df,
aes(x=AvgScrRead.y,y=AvgScrMath.y)) +
geom_point(alpha=3/4,size=3/4) +
labs(title="SAT Reading vs. Math")
read_vs_math + geom_text (data=subset(school.df,
AvgScrRead.y<350 & AvgScrMath.y>430),
aes(label=School),
size=2.5, nudge_y = -5.5)
read_vs_math + geom_hline (yintercept =500, linetype=3) +
geom_vline(xintercept = 500, linetype=3) +
stat_smooth(method = "lm")
summary(score_model)
score_model <- lm (data=school.df,
summary(score_model)
core_model <- lm (data=school.df,
AvgS
core_model <- lm (data=school.df,
AvgScrMath.y ~ AvgScrRead.y +AvgScrWrite
)
score_model <- lm (data=school.df,
AvgScrMath.y ~ AvgScrRead.y +AvgScrWrite
)
summary(score_model)
score_model
score_model
?corr
?cor
cor(school.df$AvgScrRead.y,school.df$AvgScrMath.y)
cor(school.df$AvgScrRead.y,school.df$AvgScrMath.y, na.rm=TRUE)
cor(school.df$AvgScrRead.y,school.df$AvgScrMath.y, na.rm=TRUE)
cor(school.df$AvgScrRead.y,school.df$AvgScrMath.y, na.rm=TRUE)
cor(school.df$AvgScrRead.y, school.df$AvgScrMath.y, na.rm=FALSE)
cor(school.df$AvgScrRead.y, school.df$AvgScrMath.y)
cor(school.df$AvgScrRead.y, school.df$AvgScrMath.y, na.rm=TRUE)
cor(x=school.df$AvgScrRead.y, y=school.df$AvgScrMath.y, na.rm=TRUE)
cor(x=school.df$AvgScrRead.y)
cor(x=school.df$AvgScrRead.y, y=school.df$AvgScrMath.y, na.rm=TRUE)
cor(x=school.df$AvgScrRead.y, y=school.df$AvgScrMath.y, na.rm=FALSE)
cor(x=school.df$AvgScrRead.y, y=school.df$AvgScrMath.y)
cor(x=school.df$AvgScrRead.y, y=school.df$AvgScrMath.y, na.rm=TRUE)
cor(x=school.df$AvgScrRead.y, y=school.df$AvgScrMath.y, use="complete.obs")
#GGcorr Plot to Help with more depth.
?ggcorr
ggcorr (school.df[c("NumGE1500",
"NumTstTakr.x","AvgScrRead.x",
"AvgScrMath.x","AvgScrWrite",
"AvgSum","NumTstTakr.y",
"AvgScrEng","AvgScrRead.y",
"AvgScrMath.y","AvgScrSci",
"NumGE21","ETOT","DTOT"
)],
label=TRUE, layout.exp = 3, hjust=1, label_round = 2,label_size = 3) +
labs(title="Variable Correlations")
View(school.df)
cor(x=school.df$DTOT, y=school.df$PctGE1500, use="complete.obs")
cor(x=school.df$DTOT, y=school.df$PctGE21, use="complete.obs")
cor(x=school.df$DTOT, y=school.df$ETOT, use="complete.obs")
cor(x=school.df$DTOT, y=school.df$ETOT, use="complete.obs")
ggplot (data =school.df,
aes(x=NumGE21,y=NumGE1500))+
geom_point(alpha=3/4,size=3/4)+
geom_smooth(method="lm")
cor(x=school.df$NumGE21, y=school.df$NumGE1500, use="complete.obs")
ggplot (data =school.df,
aes(x=NumGE21,y=NumGE1500))+
geom_point(alpha=3/4,size=3/4)+
geom_smooth(method="lm")
cor(x=school.df$NumGE21, y=school.df$NumGE1500, use="complete.obs")
ggplot (data =school.df, aes(x=ETOT,y=NumGE21))+
geom_point(alpha=3/4,size=3/4)+
geom_smooth(method="lm")
cor(x=school.df$ETOT, y=school.df$PctGE21, use="complete.obs")
cor(x=school.df$ETOT, y=school.df$PctGE21, use="complete.obs")
cor(x=school.df$PctGE21, y=school.df$PctGE1500, use="complete.obs")
cor(x=school.df$NumGE21, y=school.df$NumGE1500, use="complete.obs")
ggplot (data =school.df, aes(x=PctGE21,y=PctGE1500)) +
geom_point(alpha=3/4, size=3/4)+
ylab("% Above Average SAT")+
xlab("% Above Average ACT")+
geom_hline(yintercept =50, linetype=3) +
geom_vline(xintercept = 50, linetype=3)+
geom_smooth(method="lm")
cor(x=school.df$PctGE21, y=school.df$PctGE1500, use="complete.obs")
print("Percent of Students Above 21")
summary(school.df$PctGE21)
print("Percent of Students Above 1500")
summary(school.df$PctGE1500)
geom_smooth(method="lm")
ggplot (data =school.df, aes(x=ETOT,y=NumGE21))+
geom_point(alpha=3/4,size=3/4)+
geom_smooth(method="lm")
cor(x=school.df$ETOT, y=school.df$PctGE21, use="complete.obs")
city.schools$highlight <- ifelse (
city.schools$County ==
"Los Angeles", "Los Angeles School", "Other")
ggplot (data =city.schools,
aes(x=PctGE21,y=PctGE1500, color=highlight))+
geom_point(alpha=1/4, size=3/4)+
geom_hline(yintercept =50, linetype=3) +
geom_vline(xintercept = 50, linetype=3)+
scale_color_manual(values= c(
"Los Angeles School" = "red", "Other" = "grey50"))+
geom_smooth(method = "lm", se = FALSE)
e1 <- ggplot (data =city.schools,
aes(x=County, y=PctGE21))+
geom_boxplot() +
theme(legend.position="none")
e2 <- ggplot (data =city.schools,
aes(x=County, y=PctGE1500)) +
geom_boxplot()+
theme(legend.position="none")
grid.arrange(e1,e2)
print("All Urban Data")
print("Percent of Students Above 21")
summary(city.schools$PctGE21)
print("Percent of Students Above 1500")
summary(city.schools$PctGE1500)
View(ca)
View(ca)
urban_counties <- c("Alameda","Orange",
"Contra Costa","Los Angeles",
"Riverside","Sacramento",
"San Bernardino","San Diego",
"San Francisco","San Mateo",
"Santa Clara","Ventura")
city.schools <- subset (school.df, County %in% urban_counties)
ggplot(data =city.schools,
aes(x=PctGE21,y=PctGE1500, color=County))+
geom_point(alpha=3/4, size=3/4)+
geom_hline(yintercept =50, linetype=3) +
geom_vline(xintercept = 50, linetype=3)
{
func <- function(xx)
{
return(data.frame(COR = cor(xx$PctGE21, xx$PctGE1500)))
}
city.schools1<-city.schools[rowSums(is.na(city.schools[,c('County',
'PctGE21',
'PctGE1500')]))==0,]
A1<-ddply(city.schools1, .(County), func)
ggplot(A1, aes( x = County, y = COR ) ) +
geom_point(stat = "identity" )+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
func <- function(xx)
{
return(data.frame(COR = cor(xx$PctGE21, xx$PctGE1500)))
}
city.schools1<-city.schools[rowSums(is.na(city.schools[,c('County',
'PctGE21',
'PctGE1500')]))==0,]
A1<-ddply(city.schools1, .(County), func)
ggplot(A1, aes( x = County, y = COR ) ) +
geom_point(stat = "identity" )+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(A1, aes( x = County, y = COR ) ) +
geom_point(stat = "identity" )+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(A1, aes( x = County, y = COR ) ) +
geom_point(stat = "identity" )+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(A1, aes( x = County, y = COR ) ) +
geom_point(stat = "identity" )+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(A1, aes( x = County, y = COR )) +
geom_point(stat = "identity" )
ggplot(A1, aes( x = County, y = COR )) +
geom_point(stat = "identity" )+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(A1, aes( x = County, y = COR ))
A1<-ddply(city.schools1, .(County), func)
func <- function(xx)
{
return(data.frame(COR = cor(xx$PctGE21, xx$PctGE1500)))
}
city.schools1<-city.schools[rowSums(is.na(city.schools[,c('County',
'PctGE21',
'PctGE1500')]))==0,]
ggplot(A1, aes( x = County, y = COR )) +
geom_point(stat = "identity" )+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(A1, aes( x = County, y = COR )) +
geom_point(stat = "identity" )
library(plyr)
func <- function(xx)
{
return(data.frame(COR = cor(xx$PctGE21, xx$PctGE1500)))
}
city.schools1<-city.schools[rowSums(is.na(city.schools[,c('County',
'PctGE21',
'PctGE1500')]))==0,]
A1<-ddply(city.schools1, .(County), func)
ggplot(A1, aes( x = County, y = COR ) ) +
geom_point(stat = "identity" )+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
urban_counties <- c("Alameda","Orange",
"Contra Costa","Los Angeles",
"Riverside","Sacramento",
"San Bernardino","San Diego",
"San Francisco","San Mateo",
"Santa Clara","Ventura")
city.schools <- subset (school.df, County %in% urban_counties)
ggplot(data =city.schools,
aes(x=PctGE21,y=PctGE1500, color=County))+
geom_point(alpha=3/4, size=3/4)+
geom_hline(yintercept =50, linetype=3) +
geom_vline(xintercept = 50, linetype=3)
urban_counties <- c("Alameda","Orange",
"Contra Costa","Los Angeles",
"Riverside","Sacramento",
"San Bernardino","San Diego",
"San Francisco","San Mateo",
"Santa Clara","Ventura")
city.schools <- subset (school.df, County %in% urban_counties)
ggplot(data =city.schools,
aes(x=PctGE21,y=PctGE1500, color=County))+
geom_point(alpha=3/4, size=3/4)+
geom_hline(yintercept =50, linetype=3) +
geom_vline(xintercept = 50, linetype=3)
ggplot(data =city.schools,
aes(x=PctGE21,y=PctGE1500, color=County))+
geom_point(alpha=3/4, size=3/4)+
geom_hline(yintercept =50, linetype=3) +
geom_vline(xintercept = 50, linetype=3)
color <- school.df$County
averages
ggplot (data =school.df, aes(x=PctGE21,y=PctGE1500)) +
geom_point(alpha=3/4, size=3/4)+
ylab("% Above Average SAT")+
xlab("% Above Average ACT")+
geom_hline(yintercept =50, linetype=3) +
geom_vline(xintercept = 50, linetype=3)+
geom_smooth(method="lm")
cor(x=school.df$PctGE21, y=school.df$PctGE1500, use="complete.obs")
print("Percent of Students Above 21")
summary(school.df$PctGE21)
print("Percent of Students Above 1500")
summary(school.df$PctGE1500)
ggplot (data =school.df, aes(x=PctGE21,y=PctGE1500)) +
geom_point(alpha=3/4, size=3/4)+
ylab("% Above Average SAT")+
xlab("% Above Average ACT")+
geom_hline(yintercept =50, linetype=3) +
geom_vline(xintercept = 50, linetype=3)+
geom_smooth(method="lm")
ggplot (data =school.df, aes(x=PctGE21,y=PctGE1500)) +
geom_point(alpha=3/4, size=3/4)+
ylab("% Above Average SAT")+
xlab("% Above Average ACT")+
geom_hline(yintercept =50, linetype=3) +
geom_vline(xintercept = 50, linetype=3)+
geom_smooth(method="lm")
ggplot (data =school.df, aes(x=PctGE21,y=PctGE1500)) +
geom_point(alpha=3/4, size=3/4)+
ylab("% Above Average SAT")+
xlab("% Above Average ACT")+
geom_hline(yintercept =50, linetype=3) +
geom_vline(xintercept = 50, linetype=3)+
geom_smooth(method="lm")
func <- function(xx)
{
return(data.frame(COR = cor(xx$PctGE21, xx$PctGE1500)))
}
city.schools1<-city.schools[rowSums(is.na(city.schools[,c('County',
'PctGE21',
'PctGE1500')]))==0,]
A1<-ddply(city.schools1, .(County), func)
ggplot(A1, aes( x = County, y = COR ) ) +
geom_point(stat = "identity" )+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(A1, aes( x = County, y = COR ) ) +
geom_point(stat = "identity" )+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
u1 <- ggplot(data =city.schools,
aes(x=PctGE21,y=PctGE1500, color=County))+
geom_point(alpha=3/4, size=3/4)+
geom_hline(yintercept =50, linetype=3) +
geom_vline(xintercept = 50, linetype=3)
u2 <- ggplot(urban_corr, aes( x = County, y = COR ) ) +
geom_point(stat = "identity" )+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
urban_corr<-ddply(city.schools1, .(County), Correlations)
Correlations <- function(xx)
{
return(data.frame(COR = cor(xx$PctGE21, xx$PctGE1500)))
}
urban_corr<-ddply(city.schools1, .(County), Correlations)
u2 <- ggplot(urban_corr, aes( x = County, y = COR ) ) +
geom_point(stat = "identity" )+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
grid.arrange(u1,u2)
grid.arrange(u1,u2, nrows=1)
grid.arrange(u1,u2, nrow=1)
u1
u2
ggplot (data =school.df, aes(x=PctGE21,y=PctGE1500)) +
geom_point(alpha=3/4, size=3/4)+
ylab("% Above Average SAT")+
xlab("% Above Average ACT")+
geom_hline(yintercept =50, linetype=3) +
geom_vline(xintercept = 50, linetype=3)+
geom_smooth(method="lm")
cor(x=school.df$PctGE21, y=school.df$PctGE1500, use="complete.obs")
print("Percent of Students Above 21")
summary(school.df$PctGE21)
print("Percent of Students Above 1500")
summary(school.df$PctGE1500)
read_vs_math + geom_hline (yintercept =500, linetype=3) +
geom_vline(xintercept = 500, linetype=3) +
stat_smooth(method = "lm")
cor(x=school.df$AvgScrRead.y, y=school.df$AvgScrMath.y, use="complete.obs")
?tapply
tapply(city.schools$PctGE21, city.schools$County, summary)
tapply(city.schools$PctGE1500, city.schools$County, summary)
grid.arrange(e1,e2)
mean(charterACT$PctGE21)
tapply(school.df$PctGE21, school.df$Charter, summary)
tapply(school.df$PctGE1500, school.df$Charter, summary)
ggplot(data =school.df,
aes(x=PctGE21,y=PctGE1500, color= Charter))+
geom_point ( alpha=1/3, size=3/4) +
geom_hline (yintercept =50, linetype=3) +
geom_vline (xintercept = 50, linetype=3)+
scale_color_manual ( values=c("sienna2", "#0000CC"))+
geom_smooth (method="lm",se=FALSE, size=1)+
labs(color="Charter") +
xlab ("% Students Scoring Above ACT 21")+
ylab ("% Students Scoring Above SAT 1500")
ggplot(data =school.df,
aes(x=PctGE21,y=PctGE1500, color= Charter))+
geom_point ( alpha=1/3, size=3/4) +
geom_hline (yintercept =50, linetype=3) +
geom_vline (xintercept = 50, linetype=3)+
scale_color_manual ( values=c("sienna2", "#0000CC"))+
geom_smooth (method="lm",se=FALSE, size=1, color="red")+
labs(color="Charter") +
xlab ("% Students Scoring Above ACT 21")+
ylab ("% Students Scoring Above SAT 1500")
cor(x=school.df$PctGE21, y=school.df$PctGE1500, use="complete.obs")
tapply(school.df$PctGE21, school.df$Charter, summary)
tapply(school.df$PctGE1500, school.df$Charter, summary)
ggplot(data =school.df,
aes(x=PctGE21,y=PctGE1500, color= Charter))+
geom_point ( alpha=2/3, size=3/4) +
geom_hline (yintercept =50, linetype=3) +
geom_vline (xintercept = 50, linetype=3)+
scale_color_manual ( values=c("sienna2", "#0000CC"))+
geom_smooth (method="lm",se=FALSE, size=1, color="red")+
labs(color="Charter") +
xlab ("% Students Scoring Above ACT 21")+
ylab ("% Students Scoring Above SAT 1500")
cor(x=school.df$PctGE21, y=school.df$PctGE1500, use="complete.obs")
#Getting Stats to Seperate
both <- subset (school.df,
!is.na(PctGE21) & !is.na(PctGE1500))
q1 <- subset (both,
PctGE21<50 & PctGE1500<50)
print("Are Schools That Fall Below Avg For Both Tests Charters?")
table(q1$Charter)
print("How Many are Charters on Entire Plot?")
table(both$Charter)
print("ACT Summary")
tapply(school.df$PctGE21, school.df$Charter, summary)
print("SAT Summary")
tapply(school.df$PctGE1500, school.df$Charter, summary)
e1 <- ggplot (data =city.schools,
aes(x=County, y=PctGE21)) +
geom_boxplot (fill="red") +
theme(legend.position="none") +
ylab("% Students Scoring Above ACT 21")
e2 <- ggplot(data =city.schools,
aes (x=County, y=PctGE1500)) +
geom_boxplot (fill="red")+
theme(legend.position="none") +
ylab("% Students Scoring Above SAT 1500")
grid.arrange(e1,e2)
tapply(city.schools$PctGE21, city.schools$County, summary)
tapply(city.schools$PctGE1500, city.schools$County, summary)
tapply(school.df$PctGE21, school.df$Charter, summary)
tapply(school.df$PctGE1500, school.df$Charter, summary)
Agoura <- data.frame (AvgScrRead.y=571, AvgScrWrite=573)
modelEstimate = predict(
score_model, newdata = Agoura,
interval="prediction", level = .95)
modelEstimate
print (subset (school.df,
School=="Agoura High")$AvgScrMath.y)
color <- school.df$Charter
averages + scale_color_manual (
values=c("#CCCCCC", "#0000CC"))+
labs(title="Charter Schools Identified")
